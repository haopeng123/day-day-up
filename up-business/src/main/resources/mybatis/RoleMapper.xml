<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hp.up.business.repository.RoleRepository">
    <resultMap id="roleMap" type="com.hp.up.core.Entity.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="role" column="role"/>
        <result property="description" column="description"/>
        <result property="show" column="is_show"/>
        <result property="typeName" column="role_type"/>
        <result property="parent_id" column="parent_id"/>
        <result property="parent_ids" column="parent_ids"/>
    </resultMap>

    <resultMap type="com.hp.up.core.Entity.Role" id="RolePermissionResult" extends="roleMap">
        <collection property="resourcePermissions" ofType="RoleResourcePermission">
            <id property="id" column="pid"/>
            <result property="resourceId" column="resource_id"/>
            <result property="permissionIds" column="permission_ids"/>
            <association property="role" javaType="Role"/>
        </collection>
    </resultMap>


    <resultMap id="RoleResourcePermissionResult" type="RoleResourcePermission">
        <result property="id" column="id"/>
        <result property="resourceId" column="resource_id"/>
        <result property="permissionIds" column="permission_ids"/>
        <association property="role" column="role_id" javaType="Role">
            <result property="id" column="role_id"/>
        </association>
    </resultMap>


    <select id="get" parameterType="long" resultMap="roleMap">
        SELECT
            r.id id,
            r.name,
            r.role,
            r.description,
            r.is_show,
            r.role_type
        FROM tb_role r
        WHERE r.id = #{value}
    </select>


    <select id="findRoleIds" parameterType="long" resultType="String">
        SELECT ru.role_ids
        FROM tb_user_role ur
        WHERE ur.user_id = #{value}
    </select>

    <select id="getRolesByids" parameterType="string" resultMap="roleMap">
        SELECT *
        FROM tb_role role
        WHERE find_in_set(role.id, #{value}) <![CDATA[>]]> 0
    </select>

    <select id="getRolesWithPermissionByids" resultMap="RolePermissionResult" parameterType="list">
        SELECT
        r.id id,
        r.name,
        r.role,
        r.description,
        r.is_show,
        p.id pid,
        p.role_id,
        p.resource_id,
        p.permission_ids

        FROM tb_role r LEFT JOIN

        tb_role_resource_permission p ON r.id = p.role_id WHERE r.id in

        <foreach collection="list" index="index" close=")" item="item" open="(" separator=",">#{item}</foreach>

    </select>

    <select id="getAll" resultMap="RolePermissionResult">
        SELECT
            r.id id,
            r.name,
            r.role,
            r.description,
            r.is_show,
            r.role_type,
            r.parent_id,
            r.parent_ids
        FROM tb_role r
        WHERE r.is_show = 1
    </select>


    <select id="getRoleResourcePermission" resultMap="RoleResourcePermissionResult" parameterType="long">
        SELECT *
        FROM tb_role_resource_permission
        WHERE role_id = <![CDATA[#{value}
        ]]>
    </select>

    <delete id="remove" parameterType="long">

        DELETE FROM tb_role
        WHERE id = #{value}

    </delete>

    <delete id="deleteRoleResourcePermissionByRoleId" parameterType="long">
        DELETE FROM tb_role_resource_permission
        WHERE role_id = <![CDATA[#{roleId}
        ]]>
    </delete>

    <insert id="insertRoleResourcePermission" parameterType="map">
        INSERT INTO tb_role_resource_permission (
            role_id, resource_id, permission_ids
        ) VALUES (
        <![CDATA[#{roleId}]]>,
        <![CDATA[#{resourceId}]]>,
        <![CDATA[#{permissionIds}]]>
        )
    </insert>


    <insert id="save" parameterType="Role">
        INSERT INTO tb_role (
            name, role, description, role_type
        ) VALUES (
        <![CDATA[#{name}]]>,
        <![CDATA[#{role}]]>,
        <![CDATA[#{description}]]>,
        <![CDATA[#{typeName}]]>
        )
    </insert>


    <update id="update" parameterType="role" useGeneratedKeys="true" keyProperty="id">

        UPDATE tb_role
        <set>
            <if test=" null !=name">
                name = #{name},
            </if>
            <if test=" null !=role">
                role = #{role},
            </if>
            <if test=" null !=description">
                description = #{description},
            </if>
            <if test=" null !=typeName">
                role_type = #{typeName},
            </if>

        </set>

        WHERE id = #{id}

    </update>


</mapper>