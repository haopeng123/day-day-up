<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:component-scan base-package="com.hp.up.business"/>

    <!-- 加载配置文件数据 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config/${profile.active}/db.properties</value>
                <value>classpath*:config/${profile.active}/application.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>

        <!-- 设置编码格式 -->
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <!--@Value读取配置文件   @Value("#{propertiesReader[admin.path]}") -->
   <bean id="propertiesReader"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:config/${profile.active}/application.properties</value>
            </list>
        </property>
        <!-- 设置编码格式 -->
       <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <!--<util:properties id="settings" location="classpath:config/dev/application.properties"/>-->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list >
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>




    <!-- 激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />


    <!-- 扫描切面包路径 已经改为注解配置 -->
    <!--<bean id="logAspect" class="com.hp.up.business.modules.aspect.log.LogAspect">-->
        <!--<property name="logPoint">-->
            <!--<bean class="com.hp.up.business.service.impl.SystemLogServiceImpl" />-->
        <!--</property>-->
    <!--</bean>-->
    <!--<aop:config>-->
        <!--<aop:aspect ref="logAspect">-->
            <!--<aop:pointcut id="logPointCut" expression="@annotation(com.hp.up.business.annotation.Log)" />-->
            <!--<aop:around pointcut-ref="logPointCut" method="save" />-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <bean id="springBeanUtils" class="com.hp.up.core.utils.SpringBeanUtils" scope="singleton"/>

     <!--作业调度器Quartz的配置。定义触发器来管理任务Bean,cronExpression指定Cron表达式：测试每5分钟执行一次-->
    <bean id="cronTriggerPunch" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean" p:cronExpression="0 0/5 * ? * *">
        <property name="jobDetail">
            <!-- 使用嵌套Bean的方式来定义任务Bean
                jobClass指定任务Bean的实现类 -->
            <bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean" p:jobClass="com.hp.up.business.schedule.MySchedule" p:durability="true">
            </bean>
        </property>
    </bean>
     <!--执行实际的调度调度-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTriggerPunch"/>
            </list>
        </property>
    </bean>


    <import resource="/spring-ehcache.xml" />
    <import resource="/spring-mybatis.xml"/>
    <import resource="/spring-shiro.xml" />
    <import resource="classpath*:spring-redis.xml" />
</beans>