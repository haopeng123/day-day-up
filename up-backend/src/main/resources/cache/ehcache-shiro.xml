<ehcache updateCheck="false" dynamicConfig="false">

    <!--<diskStore path="d:\\ehcache\\us-service\\tmpdir" />-->
    <diskStore path="java.io.tmpdir"/>

    <cacheManagerEventListenerFactory class="" properties=""/>

    <!--
        name: cache的名字，用来识别不同的cache，必须惟一。
        maxElementsInMemory: 内存管理的缓存元素数量最大限值。
        maxElementsOnDisk: 硬盘管理的缓存元素数量最大限值。默认值为0，就是没有限制。
        eternal: 设定元素是否持久话。若设为true，则缓存元素不会过期。
        overflowToDisk: 设定是否在内存填满的时候把数据转到磁盘上。
        timeToIdleSeconds： 设定元素在过期前空闲状态的时间，只对非持久性缓存对象有效。默认值为0,值为0意味着元素可以闲置至无限长时间。
        timeToLiveSeconds: 设定元素从创建到过期的时间。其他与timeToIdleSeconds类似。
        diskPersistent: 设定在虚拟机重启时是否进行磁盘存储，默认为false.(我的直觉，对于安全小型应用，宜设为true)。
        diskExpiryThreadIntervalSeconds: 访问磁盘线程活动时间。
        diskSpoolBufferSizeMB: 存入磁盘时的缓冲区大小，默认30MB,每个缓存都有自己的缓冲区。
        memoryStoreEvictionPolicy: 元素逐出缓存规则。共有三种，Recently Used (LRU)最近最少使用，为默认。 First In First Out (FIFO)，先进先出。Less Frequently Used(specified as LFU)最少使用
    -->

    <defaultCache
            maxElementsInMemory="3000"
            eternal="false"
            timeToIdleSeconds="3600"
            timeToLiveSeconds="3600"
            overflowToDisk="true"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="100"
            memoryStoreEvictionPolicy="LRU"
    />
    <cache name="resourceCache"
           maxElementsInMemory="3000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="3600"
           timeToLiveSeconds="3600"
           memoryStoreEvictionPolicy="LFU"
    />

</ehcache>

<!--

        1 FIFO ，first in first out ，这个是大家最熟的，先进先出，不多讲了

        2 LFU ， Less Frequently Used ，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面所讲，缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存。

        2 LRU ，Least Recently Used ，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。-->
